var e,t,s;import{H as n,n as a,P as i,F as r,S as o,R as h}from"./vendor-supabase-Dzta5LwM.js";import{A as c}from"./vendor-supabase-auth-DS9P1e1f.js";let u="";u="undefined"!=typeof Deno?"deno":"undefined"!=typeof document?"web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?"react-native":"node";const l={headers:{"X-Client-Info":`supabase-js-${u}/2.51.0`}},d={schema:"public"},f={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},g={};e=function(e,t,s,n){return new(s||(s=Promise))(function(a,i){function r(e){try{h(n.next(e))}catch(t){i(t)}}function o(e){try{h(n.throw(e))}catch(t){i(t)}}function h(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(r,o)}h((n=n.apply(e,t||[])).next())})},t=function(e,t,s,n){return new(s||(s=Promise))(function(a,i){function r(e){try{h(n.next(e))}catch(t){i(t)}}function o(e){try{h(n.throw(e))}catch(t){i(t)}}function h(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(r,o)}h((n=n.apply(e,t||[])).next())})};class b extends c{constructor(e){super(e)}}s=function(e,t,s,n){return new(s||(s=Promise))(function(a,i){function r(e){try{h(n.next(e))}catch(t){i(t)}}function o(e){try{h(n.throw(e))}catch(t){i(t)}}function h(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(r,o)}h((n=n.apply(e,t||[])).next())})};class p{constructor(s,r,o){var h,c,u,b;if(this.supabaseUrl=s,this.supabaseKey=r,!s)throw Error("supabaseUrl is required.");if(!r)throw Error("supabaseKey is required.");const p=(b=s).endsWith("/")?b:b+"/",v=new URL(p);this.realtimeUrl=new URL("realtime/v1",v),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",v),this.storageUrl=new URL("storage/v1",v),this.functionsUrl=new URL("functions/v1",v);const m=`sb-${v.hostname.split(".")[0]}-auth-token`,y=function(e,s){var n,a;const{db:i,auth:r,realtime:o,global:h}=e,{db:c,auth:u,realtime:l,global:d}=s,f={db:Object.assign(Object.assign({},c),i),auth:Object.assign(Object.assign({},u),r),realtime:Object.assign(Object.assign({},l),o),global:Object.assign(Object.assign(Object.assign({},d),h),{headers:Object.assign(Object.assign({},null!==(n=null==d?void 0:d.headers)&&void 0!==n?n:{}),null!==(a=null==h?void 0:h.headers)&&void 0!==a?a:{})}),accessToken:()=>t(this,void 0,void 0,function*(){return""})};return e.accessToken?f.accessToken=e.accessToken:delete f.accessToken,f}(null!=o?o:{},{db:d,realtime:g,auth:Object.assign(Object.assign({},f),{storageKey:m}),global:l});this.storageKey=null!==(h=y.auth.storageKey)&&void 0!==h?h:"",this.headers=null!==(c=y.global.headers)&&void 0!==c?c:{},y.accessToken?(this.accessToken=y.accessToken,this.auth=new Proxy({},{get:(e,t)=>{throw Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${t+""} is not possible`)}})):this.auth=this._initSupabaseAuthClient(null!==(u=y.auth)&&void 0!==u?u:{},this.headers,y.global.fetch),this.fetch=((t,s,i)=>{const r=(e=>{let t;return t=e||("undefined"==typeof fetch?a:fetch),(...e)=>t(...e)})(i),o="undefined"==typeof Headers?n:Headers;return(n,a)=>e(void 0,void 0,void 0,function*(){var e;const i=null!==(e=yield s())&&void 0!==e?e:t;let h=new o(null==a?void 0:a.headers);return h.has("apikey")||h.set("apikey",t),h.has("Authorization")||h.set("Authorization","Bearer "+i),r(n,Object.assign(Object.assign({},a),{headers:h}))})})(r,this._getAccessToken.bind(this),y.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},y.realtime)),this.rest=new i(new URL("rest/v1",v).href,{headers:this.headers,schema:y.db.schema,fetch:this.fetch}),y.accessToken||this._listenForAuthEvents()}get functions(){return new r(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}get storage(){return new o(this.storageUrl.href,this.headers,this.fetch)}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,t={},s={}){return this.rest.rpc(e,t,s)}channel(e,t={config:{}}){return this.realtime.channel(e,t)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,t;return s(this,void 0,void 0,function*(){if(this.accessToken)return yield this.accessToken();const{data:s}=yield this.auth.getSession();return null!==(t=null===(e=s.session)||void 0===e?void 0:e.access_token)&&void 0!==t?t:null})}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:n,storageKey:a,flowType:i,lock:r,debug:o},h,c){const u={Authorization:"Bearer "+this.supabaseKey,apikey:""+this.supabaseKey};return new b({url:this.authUrl.href,headers:Object.assign(Object.assign({},u),h),storageKey:a,autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:n,flowType:i,lock:r,debug:o,fetch:c,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new h(this.realtimeUrl.href,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},null==e?void 0:e.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((e,t)=>{this._handleTokenChanged(e,"CLIENT",null==t?void 0:t.access_token)})}_handleTokenChanged(e,t,s){"TOKEN_REFRESHED"!==e&&"SIGNED_IN"!==e||this.changedAccessToken===s?"SIGNED_OUT"===e&&(this.realtime.setAuth(),"STORAGE"==t&&this.auth.signOut(),this.changedAccessToken=void 0):this.changedAccessToken=s}}const v=(e,t,s)=>new p(e,t,s);export{v as c};
